apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion rootProject.compileSdkVersion


    defaultConfig {
        applicationId "com.niehusst.partyq"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 2
        versionName "1.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            def keystorePropertiesFile = rootProject.file("keystore.properties")
            if (keystorePropertiesFile.exists()) {
                // local env: load release build info from properties file
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                def keystore_fname = keystoreProperties["PARTYQ_KEYSTORE_FILENAME"]
                def keystore_password = keystoreProperties["PARTYQ_KEYSTORE_PASSWORD"]
                def key_alias = keystoreProperties["PARTYQ_KEY_ALIAS"]
                def key_password = keystoreProperties["PARTYQ_KEY_PASSWORD"]

                storeFile file(keystore_fname)
                storePassword keystore_password
                keyAlias key_alias
                keyPassword key_password
            } else {
                // circleci env: load release build info from env vars
                def keystore_fname = System.getenv("PARTYQ_KEYSTORE_FILENAME")
                def keystore_password = System.getenv("PARTYQ_KEYSTORE_PASSWORD")
                def key_alias = System.getenv("PARTYQ_KEY_ALIAS")
                def key_password = System.getenv("PARTYQ_KEY_PASSWORD")

                storeFile file(keystore_fname)
                storePassword keystore_password
                keyAlias key_alias
                keyPassword key_password
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        // exclude kotlin coroutines debugger info
        exclude "DebugProbesKt.bin"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    ndkVersion '20.0.5594570'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':spotify-developer-sdk')
    implementation platform('com.google.firebase:firebase-bom:26.6.0')

    implementation "androidx.annotation:annotation:$androidXAnnotations"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.7.3"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.google.android.gms:play-services-nearby:17.0.0"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation 'com.spotify.android:auth:1.1.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.4.0"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Architecture deps
    implementation "android.arch.lifecycle:common-java8:1.1.1"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Unit test deps
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Instrumented test deps
    androidTestImplementation "androidx.navigation:navigation-testing:$navigationVersion"
    androidTestImplementation "androidx.test:core:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    // FragmentScenario (should be test impl, but bug forces to be regular impl)
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
}
