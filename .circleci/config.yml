aliases:
  - &root_dir
    ~/code

  - &set_secrets_from_env_vars
    # write circleci env vars into local files
    name: Generate secrets files
    command: |
      echo "SPOTIFY_CLIENT_ID="$SPOTIFY_CLIENT_ID > apikey.properties
      echo "$PARTYQ_KEYSTORE_FILE" | base64 --decode > partyq_release.jks
      echo "$GOOGLE_SERVICES_FILE" | base64 --decode > app/google-services.json
      echo "$PLAY_STORE_SERVICE_ACCOUNT_FILE" | base64 --decode > api-play-store-key.json

orbs:
  android: circleci/android@1.0.3

defaults: &defaults
  working_directory: *root_dir
  machine:
      image: android:202102-01
  resource_class: large
  environment:
    JVM_OPTS: -Xmx3200m -XX:+IgnoreUnrecognizedVMOptions
    GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.workers.max=2

restore_deps: &restore_deps
  restore_cache:
    key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

attach_workspace: &attach_workspace
  attach_workspace:
    at: *root_dir

add_git_fingerprint: &add_git_fingerprint
  add_ssh_keys:
    fingerprints:
      - "cf:5b:4f:e1:b1:ee:67:ae:de:0e:5d:af:1a:6d:9d:bf"

version: 2.1
jobs:
  build:
    <<: *defaults
    steps:
      - *add_git_fingerprint
      - checkout
      - *restore_deps
      - run: *set_secrets_from_env_vars
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
  lint:
    <<: *defaults
    steps:
      - *add_git_fingerprint
      - checkout
      - *attach_workspace
      - *restore_deps
      - run: *set_secrets_from_env_vars
      - run:
          name: Lint
          command: ./gradlew lint --stacktrace --status

  unit-tests:
    <<: *defaults
    parallelism: 2
    steps:
      - *add_git_fingerprint
      - checkout
      - *attach_workspace
      - *restore_deps
      - run: *set_secrets_from_env_vars
      - run:
          name: Run Unit Tests
          command: ./gradlew test --stacktrace
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  deploy-beta:
    <<: *defaults
    steps:
      - *add_git_fingerprint
      - checkout
      - *attach_workspace
      - *restore_deps
      - run: *set_secrets_from_env_vars
      - run: 
          name: Install fastlane
          command: bundle install
      - run:
          name: Fastlane deploy
          command: bundle exec fastlane beta

  deploy-release:
    <<: *defaults
    steps:
      - *add_git_fingerprint
      - checkout
      - *attach_workspace
      - *restore_deps
      - run: *set_secrets_from_env_vars
      - run: 
          name: Install fastlane
          command: bundle install
      - run:
          name: Fastlane deploy
          command: bundle exec fastlane deploy

# See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

workflows:
  branch-validation:
    jobs:
      - build
      - lint:
          requires:
            - build
      - unit-tests:
          requires:
            - build
      - hold-for-beta:
          type: approval
          requires:
            - unit-tests
      - deploy-beta
          requires:
            - hold-for-beta
      - hold-for-release:
          type: approval
          requires:
            - deploy-beta
      - deploy-release
          requires:
            - hold-for-release
